<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Shoping cart sidebar
 *
 * @see Mage_Checkout_Block_Cart_Sidebar
 */

?>
<div id="cart_summary" class="header-cart">
	<div class="summary active">
		<div class="icon">
			<i class="fa fa-shopping-cart"></i>
		</div>
		<p id="amount" class="amount">0</p>
	</div>
	<div class="text"><?php echo $this->__('Coşul meu') ?></div>
	<div id="cart_review" class="cart-content large">
		<p id="cart-default-text"><?php echo $this->__('Coşul de cumparaturi este gol.') ?></p>
		<?php
			$stores = Mage::getModel('core/website')->getCollection();
			foreach($stores as $store){
				if ($store->getCode() != 'base'){
					$_baseUrl = Mage::getModel('core/store')->getCollection()->addFieldToFilter('store_id', array('eq'=>$store->getId()))->getFirstItem()->getBaseUrl();
					$_storeCode = $store->getCode();
		?>
			<div id="website-<?php echo $_storeCode ?>"></div>
		<?php
				}
			}
		?>
	</div>
</div>

<script>
	var amount = 0;
	var isSet = false;
	function retreiveCartData(storeCode,baseUrl){
		new Ajax.Request(baseUrl+'cart?cart=true', {
			method: 'post',
			onLoading:function(response){
				$('cart_summary').addClassName('loading');
			},
			onComplete:function(response){  
				var json = response.responseText.evalJSON();
				$('cart_summary').removeClassName('loading');
				if (json.body && json.body != ''){
					isSet = true;
					$('website-'+storeCode).innerHTML = json.body;
					$('cart-default-text').setStyle({'display':'none'});
					$('amount').setStyle({'display':'block'});
					amount =  parseInt(amount + json.cart_qty);
					$('amount').innerHTML = amount;
				} else if(!isSet) {
					$('cart-default-text').setStyle({'display':'block'});
					$('website-'+storeCode).innerHTML = '';
					// $('amount').setStyle({'display':'none'});
				}
			},
		}); 
		return false;
	}
	function runAllCart(){
		amount = 0;
		<?php
			$stores = Mage::getModel('core/website')->getCollection();
			foreach($stores as $store){
				if ($store->getCode() != 'base'){
					$_baseUrl = Mage::getModel('core/store')->getCollection()->addFieldToFilter('store_id', array('eq'=>$store->getId()))->getFirstItem()->getBaseUrl();
					$_storeCode = $store->getCode();
		?>
			retreiveCartData('<?php echo $_storeCode ?>','<?php echo $_baseUrl ?>');
		<?php
				}
			}
		?>
	}
	function removeFromCart(url){
		new Ajax.Request(url, {
			method: 'post',
			onLoading:function(){},
			onComplete:function(response){ 
/* 				amount = 0;
				isSet = false;
				runAllCart(); */
				window.location.reload();
			},
		}); 	
	}
</script>